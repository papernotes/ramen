{"version":3,"sources":["Toolbar.js","Faq.js","useWindowDimensions.js","RamenList.js","RamenMap.js","ramen.yml","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Toolbar","Navbar","Container","Brand","style","textDecoration","to","Collapse","className","Faq","width","margin","textAlign","getWindowDimensions","window","innerWidth","height","innerHeight","RamenList","props","reviews","update","setText","categories","1","2","3","4","5","maxHeight","overflow","forEach","review","rank","push","Object","keys","map","key","ranking","filtered","filter","toString","header","getHeader","ListGroup","variant","sort","review_a","review_b","name","localeCompare","index","Item","action","onClick","lat","lng","text","generateListGroup","generateFullList","RamenMap","revs","defaultCenter","center","defaultZoom","color","anchor","Home","DEFAULT_LAT","DEFAULT_LNG","useState","setLat","setLng","setReviews","setName","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","txt","length","fetch","ramenYaml","then","r","yaml","load","Row","Col","sm","whiteSpace","maxWidth","App","path","element","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","document","getElementById"],"mappings":"gOAwBeA,MAnBf,WACI,OACI,cAACC,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,WACE,cAACD,EAAA,EAAOE,MAAR,UACI,cAAC,IAAD,CAAMC,MAAO,CAACC,eAAgB,QAASC,GAAG,SAA1C,SACE,sDAGN,cAACL,EAAA,EAAOM,SAAR,CAAiBC,UAAU,sBAA3B,SACI,cAAC,IAAD,CAAMJ,MAAO,CAACC,eAAgB,QAASC,GAAG,OAA1C,SACE,+CCeDG,MA5Bf,WACI,OACI,gCACI,mGACA,uGACA,oBAAIL,MAAO,CAACM,MAAO,OAAQC,OAAQ,UACnC,uBACA,sBAAKP,MAAO,CAACO,OAAQ,OAAQD,MAAO,MAAOE,UAAW,QAAtD,UACI,qEACA,mIACA,uDACA,mFACA,0DACA,oHACA,wDACA,uHACA,uDACA,mEACA,0EACA,uHACA,4EACA,4DAEJ,cAAC,IAAD,CAAMN,GAAG,SAAT,sB,uBCxBZ,SAASO,IAAuB,IAAD,EACsBC,OACnD,MAAO,CACLJ,MAH2B,EACrBK,WAGNC,OAJ2B,EACFC,a,YC2DdC,MA3Df,SAAmBC,GACf,IAAIC,EAAUD,EAAMC,QACdC,EAASF,EAAME,OACfC,EAAUH,EAAMG,QAClBC,EAAa,CAACC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAE,GAAIC,EAAG,IAgDhD,OACI,qBAAKxB,MAAO,CAACyB,UAAW,OAAQC,SAAU,UAA1C,SANJ,SAA0BV,GAEtB,OADAA,EAAQW,SAAQ,SAAAC,GAAM,OAAIT,EAAWS,EAAOC,MAAMC,KAAKF,MAChDG,OAAOC,KAAKb,GAAYc,KAAI,SAACC,GAAD,OA5BvC,SAA2BlB,EAASmB,GAChC,IAAMC,EAAWpB,EAAQqB,QAAO,SAAAT,GAAM,OAAIA,EAAOC,KAAKS,aAAeH,KAC/DI,EAjBV,SAAmBJ,GACf,OAAOA,GACH,IAAK,IACD,MAAO,MACX,IAAK,IACD,MAAO,SACX,IAAK,IACD,MAAO,YACX,IAAK,IACD,MAAO,MACX,QACI,MAAO,oBAMAK,CAAUL,GAEzB,OACI,gCACI,6BAAKI,IACL,cAACE,EAAA,EAAD,CAAWC,QAAQ,QAAnB,SAEQN,EACKO,MAAK,SAACC,EAAUC,GAAX,OAAwBD,EAASE,KAAKC,cAAcF,EAASC,SAClEb,KAAI,SAACL,EAAQoB,GAAT,OACD,cAACP,EAAA,EAAUQ,KAAX,CACIC,QAAM,EACNC,QAAS,WAAOlC,EAAOW,EAAOkB,KAAMlB,EAAOwB,IAAKxB,EAAOyB,KAAMnC,EAAQU,EAAO0B,OAFhF,SAKK1B,EAAOkB,MAFHE,UAVnBb,GAuB8BoB,CAAkBpC,EAAWe,GAAMA,MAK1EsB,CAAiBxC,M,QCTfyC,MA7Cf,SAAkB1C,GACd,IAMuB2C,EANnB1C,EAAUD,EAAMC,QAChB2C,EAAgB5C,EAAM4C,cACtBP,EAAMrC,EAAMqC,IACZC,EAAMtC,EAAMsC,IACVpC,EAASF,EAAME,OAgCrB,OACI,eAAC,IAAD,CAAKL,OAAQ,IAAK+C,cAAeA,EAAeC,OAAQ,CAACR,EAAKC,GAAMQ,YAAa,GAAjF,WA/BmBH,EAgCA1C,EA/BZ0C,EAAKzB,KAAI,SAACL,EAAQoB,GACvB,MAA+B,MAA3BpB,EAAOC,KAAKS,WACP,cAAC,IAAD,CACLa,QAAS,kBAAMlC,EAAOW,EAAOkB,KAAMlB,EAAOwB,IAAKxB,EAAOyB,IAAKzB,EAAO0B,OAClEQ,MAAO,OAEPxD,MAAO,GACPyD,OAAQ,CAACnC,EAAOwB,IAAKxB,EAAOyB,MAFvBL,GAKLpB,EAAOwB,MAAQA,GAAOxB,EAAOyB,MAAQA,EAChC,cAAC,IAAD,CACLF,QAAS,kBAAMlC,EAAOW,EAAOkB,KAAMlB,EAAOwB,IAAKxB,EAAOyB,IAAKzB,EAAO0B,OAClEQ,MAAO,QAEPxD,MAAO,GACPyD,OAAQ,CAACnC,EAAOwB,IAAKxB,EAAOyB,MAFvBL,GAKA,cAAC,IAAD,CACLc,MAAO,MAEPxD,MAAO,GACPyD,OAAQ,CAACX,EAAKC,IAFTL,OAWP,cAAC,IAAD,QC3CG,MAA0B,kC,QCwF1BgB,MA7Ef,WACI,IAAMC,EAAc,WACdC,GAAe,YAFT,EAKUC,mBAASF,GALnB,mBAKLb,EALK,KAKAgB,EALA,OAMUD,mBAASD,GANnB,mBAMLb,EANK,KAMAgB,EANA,OAOkBF,mBAAS,IAP3B,mBAOLnD,EAPK,KAOIsD,EAPJ,OAQYH,mBAAS,MARrB,mBAQLrB,EARK,KAQCyB,EARD,OASYJ,mBANF,gJAHV,mBASLb,EATK,KASCpC,EATD,KAWLZ,EJZI,WAAgC,IAAD,EACI6D,mBAAS1D,KADb,mBACrC+D,EADqC,KACnBC,EADmB,KAY5C,OATAC,qBAAU,WACR,SAASC,IACPF,EAAoBhE,KAItB,OADAC,OAAOkE,iBAAiB,SAAUD,GAC3B,kBAAMjE,OAAOmE,oBAAoB,SAAUF,MACjD,IAEIH,EIAWM,GAATxE,MAYP,SAASW,EAAO6B,EAAMM,EAAKC,EAAK0B,GAC5BX,EAAOhB,GACPiB,EAAOhB,GACPkB,EAAQzB,GACR5B,EAAQ6D,GAGZ,OAjBAL,qBAAU,WACe,IAAnB1D,EAAQgE,QACVC,MAAMC,GACLC,MAAK,SAAAC,GAAC,OAAIA,EAAE9B,UACZ6B,MAAK,SAAA7B,GACJgB,EAAWe,IAAKC,KAAKhC,SAGxB,CAACtC,IASAV,GAAS,IAET,eAACR,EAAA,EAAD,WACE,cAACyF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGzF,MAAO,CAACY,OAAQ,QAA5B,SACE,sBAAKZ,MAAO,CAAC0F,WAAW,eAAgBlF,UAAW,QAAnD,UACM,6BAAKsC,IACL,4BAAIQ,WAId,eAACiC,EAAA,EAAD,WACE,qBAAKvF,MAAO,CAACQ,UAAW,QAAxB,SACE,8CAEF,cAACgF,EAAA,EAAD,CAAKC,GAAI,EAAGzF,MAAO,CAACM,MAAO,OAAQM,OAAQ,QAA3C,SACI,cAAC,EAAD,CAAWI,QAASA,EAASC,OAAQA,EAAQC,QAASA,YAQ9D,cAACpB,EAAA,EAAD,CAAWE,MAAO,CAAC2F,SAAU,QAA7B,SACI,eAACJ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGzF,MAAO,CAACyB,UAAW,QAA/B,SACI,cAAC,EAAD,CAAWT,QAASA,EAASC,OAAQA,EAAQC,QAASA,MAE1D,eAACsE,EAAA,EAAD,CAAKC,GAAI,EAAGzF,MAAO,CAACY,OAAQ,QAA5B,UACI,cAAC,EAAD,CACEI,QAASA,EACT2C,cAAe,CAACM,EAAaC,GAC7Bd,IAAKA,EACLC,IAAKA,EACLpC,OAAQA,IAEV,sBAAKjB,MAAO,CAAC0F,WAAW,gBAAxB,UACE,6BAAK5C,IACL,4BAAIQ,gBC3DTsC,MAbf,WACE,OACE,sBAAKxF,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyF,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,SAASC,QAAS,cAAC,EAAD,MACpC,cAAC,IAAD,CAAOC,OAAK,EAACF,KAAK,OAAOC,QAAS,cAAC,EAAD,aCH3BE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAD,CAAeC,SAAS,IAAxB,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0e8d7ffe.chunk.js","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Link } from \"react-router-dom\";\n\nfunction Toolbar() {\n    return(\n        <Navbar>\n        <Container>\n          <Navbar.Brand>\n              <Link style={{textDecoration: 'none'}} to='/ramen'>\n                <h2>jon's ramen list</h2>\n              </Link>\n          </Navbar.Brand>\n          <Navbar.Collapse className=\"justify-content-end\">\n              <Link style={{textDecoration: 'none'}} to='/faq'>\n                <h3>faq</h3>\n              </Link>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    )\n}\n\nexport default Toolbar;","import React from 'react';\nimport { Link} from \"react-router-dom\";\n\nfunction Faq() {\n    return(\n        <div>\n            <p>As a heads up, I do like strong/rich broths. A good egg will help.</p>\n            <p>I usually check things out like: broth &gt; noodles &gt; chashu &gt; egg &gt; rest</p>\n            <hr style={{width: '50vw', margin: 'auto'}}/>\n            <br/>\n            <div style={{margin: 'auto', width: '50%', textAlign: 'left'}}>\n                <h4>Why are the reviews so vague/short?</h4>\n                <p>I'm really bad at explaining flavors/food. A lot of these are quick notes I saved during the meal.</p>\n                <h4>What does \"yes\" mean?</h4>\n                <p>I'll say yes if you ask me to go there every time.</p>\n                <h4>What does \"try it\" mean?</h4>\n                <p>Try it out. There's something here that I liked . I wouldn't mind eating here, too.</p>\n                <h4>What does \"aite\" mean?</h4>\n                <p>It's good, it's alright, but I won't seek it out. I wouldn't mind eating here, though.</p>\n                <h4>What does \"nah\" mean?</h4>\n                <p>I'd prefer eating some place else.</p>\n                <h4>Should I never eat at the \"Nah\" section?</h4>\n                <p>No, you should still try it all. I'd be willing to go back to these places eventually.</p>\n                <h4>How can you put RAMEN_PLACE in CATEGORY?!?</h4>\n                <p>My bad, ignore that one.</p>\n            </div>\n            <Link to='/ramen'>home</Link>\n        </div>\n    )\n}\n\nexport default Faq;","import { useEffect, useState } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nfunction RamenList(props) {\n    let reviews = props.reviews;\n    const update = props.update;\n    const setText = props.setText;\n    let categories = {1: [], 2: [], 3: [], 4:[], 5: []};\n\n    function getHeader(ranking) {\n        switch(ranking) {\n            case '1':\n                return 'Yes';\n            case '2':\n                return 'Try it';\n            case '3':\n                return \"It's aite\";\n            case '4':\n                return 'Nah'\n            default:\n                return \"haven't been yet\"\n        }\n    }\n\n    function generateListGroup(reviews, ranking) {\n        const filtered = reviews.filter(review => review.rank.toString() === ranking);\n        const header = getHeader(ranking);\n\n        return(\n            <div key={ranking}>\n                <h2>{header}</h2>\n                <ListGroup variant='flush'>\n                    {\n                        filtered\n                            .sort((review_a, review_b) => review_a.name.localeCompare(review_b.name))\n                            .map((review, index) =>\n                                <ListGroup.Item\n                                    action\n                                    onClick={() => {update(review.name, review.lat, review.lng); setText(review.text)}}\n                                    key={index}\n                                >\n                                    {review.name}\n                                </ListGroup.Item>\n                            )\n                    }\n                </ListGroup>\n            </div>\n        )\n    }\n\n    function generateFullList(reviews) {\n        reviews.forEach(review => categories[review.rank].push(review));\n        return Object.keys(categories).map((key) => generateListGroup(categories[key], key));\n    }\n\n    return (\n        <div style={{maxHeight: '100%', overflow: 'scroll'}} >\n            {generateFullList(reviews)}\n        </div>\n    )\n}\n\nexport default RamenList;","import React from 'react';\nimport { Map, Marker, ZoomControl } from \"pigeon-maps\";\n\nfunction RamenMap(props) {\n    let reviews = props.reviews;\n    let defaultCenter = props.defaultCenter;\n    let lat = props.lat;\n    let lng = props.lng;\n    const update = props.update;\n\n    function createMarkers(revs) {\n        return revs.map((review, index) => {\n          if (review.rank.toString() === '5') {\n            return <Marker\n              onClick={() => update(review.name, review.lat, review.lng, review.text)}\n              color={'gray'}\n              key={index}\n              width={40}\n              anchor={[review.lat, review.lng]}\n            />\n          }\n          if (review.lat !== lat && review.lng !== lng) {\n            return <Marker\n              onClick={() => update(review.name, review.lat, review.lng, review.text)}\n              color={'green'}\n              key={index}\n              width={40}\n              anchor={[review.lat, review.lng]}\n            />\n          } else {\n            return <Marker\n              color={'red'}\n              key={index}\n              width={50}\n              anchor={[lat, lng]}\n            />\n          }\n        })\n      }\n\n    return (\n        <Map height={400} defaultCenter={defaultCenter} center={[lat, lng]} defaultZoom={12}>\n            {createMarkers(reviews)}\n            <ZoomControl/>\n        </Map>\n    )\n}\n\nexport default RamenMap;","export default __webpack_public_path__ + \"static/media/ramen.f770b7ec.yml\";","import React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport useWindowDimensions from './useWindowDimensions';\n\nimport RamenList from './RamenList';\nimport RamenMap from './RamenMap';\nimport ramenYaml from './ramen.yml';\nimport yaml from 'js-yaml';\n\nfunction Home() {\n    const DEFAULT_LAT = 37.7649439;\n    const DEFAULT_LNG = -122.4640632;\n    const STARTING_TEXT = 'Thanks for coming through. Check out the ramen list and the FAQ.\\nIf you find yourself liking the places I like, maybe this list is for you.'\n  \n    const [lat, setLat] = useState(DEFAULT_LAT);\n    const [lng, setLng] = useState(DEFAULT_LNG);\n    const [reviews, setReviews] = useState([]);\n    const [name, setName] = useState('hi');\n    const [text, setText] = useState(STARTING_TEXT);\n\n    const {width} = useWindowDimensions();\n    \n    useEffect(() => {\n      if (reviews.length === 0) {\n        fetch(ramenYaml)\n        .then(r => r.text())\n        .then(text => {\n          setReviews(yaml.load(text));\n        })\n      }\n    }, [reviews]);\n\n    function update(name, lat, lng, txt) {\n        setLat(lat);\n        setLng(lng);\n        setName(name);\n        setText(txt);\n      }\n\n    if (width <= 580) {\n      return (\n        <Container>\n          <Row>\n            <Col sm={8} style={{height: '40vh'}}>\n              <div style={{whiteSpace:'break-spaces', textAlign: 'left'}}>\n                    <h1>{name}</h1>\n                    <p>{text}</p>\n                    </div>\n            </Col>\n          </Row>\n          <Row>\n            <div style={{textAlign: 'left'}}>\n              <h2>ramen list</h2>\n            </div>\n            <Col sm={4} style={{width: '100%', height: '40vh'}}>\n                <RamenList reviews={reviews} update={update} setText={setText}/>\n            </Col>\n          </Row>\n        </Container>\n      )\n    }\n\n    return(\n        <Container style={{maxWidth: '85vw'}}>\n            <Row>\n              <Col sm={4} style={{maxHeight: '80vh'}}>\n                  <RamenList reviews={reviews} update={update} setText={setText}/>\n              </Col>\n              <Col sm={8} style={{height: '100%'}}>\n                  <RamenMap\n                    reviews={reviews}\n                    defaultCenter={[DEFAULT_LAT, DEFAULT_LNG]}\n                    lat={lat}\n                    lng={lng}\n                    update={update}\n                  />\n                  <div style={{whiteSpace:'break-spaces'}}>\n                    <h1>{name}</h1>\n                    <p>{text}</p>\n                  </div>\n              </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Home;","import './App.css';\nimport React from 'react';\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Toolbar from './Toolbar';\nimport Faq from './Faq';\nimport Home from './Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Toolbar/>\n      <Routes>\n        <Route path='*' element={<Home/>}/>\n        <Route exact path=\"/ramen\" element={<Home/>}/>\n        <Route exact path=\"/faq\" element={<Faq/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter basename='/'>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}